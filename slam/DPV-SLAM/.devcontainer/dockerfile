FROM nvidia/cuda:12.1.0-cudnn8-devel-ubuntu22.04

# Set arguments and environment variables
ARG DEBIAN_FRONTEND=noninteractive

# Fetch NVIDIA signing keys
RUN apt-key del 7fa2af80
RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/3bf863cc.pub

# Install Ubuntu base packages
RUN apt-get update && apt install -y --no-install-recommends \
    software-properties-common \
    apt-utils \
    dbus-x11 \
    libglvnd0 \
    libgl1 \
    libglx0 \
    libegl1 \
    libxext6 \
    libx11-6 \
    libgl1-mesa-dev \
    libglew-dev \
    libwayland-dev \
    libxkbcommon-dev \
    wayland-protocols \
    libegl1-mesa-dev

RUN apt-get update && apt install -y --no-install-recommends \
    build-essential \
    libboost-all-dev \
    libsm6 \
    libxext6 \
    libxrender-dev \
    ninja-build \
    libc++-dev \
    libglew-dev \
    libeigen3-dev \
    cmake \
    g++ \
    libjpeg-dev \
    libpng-dev \
    libavcodec-dev \
    libavutil-dev \
    libavformat-dev \
    libswscale-dev \
    libavdevice-dev

# Installing required utilities
RUN apt-get update && apt-get install -y \
    curl \
    git \
    tzdata \
    ssh \
    unzip \
    vim \
    wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Miniconda
ENV CONDA_DIR /opt/conda
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh && \
    /bin/bash /tmp/miniconda.sh -b -p /opt/conda && \
    rm /tmp/miniconda.sh

# Put conda in PATH so we can use conda activate
ENV PATH=$CONDA_DIR/bin:$PATH

# Initialize conda
RUN conda init bash

# Clone DROID-SLAM repository and set up the environment
WORKDIR /workspace
RUN mkdir -p /workspace/DPV-SLAM && \
    git clone https://github.com/iis-esslingen/DPV-SLAM.git /workspace/DPV-SLAM && \
    cd /workspace/DPV-SLAM && \
    conda env create -f environment.yml

RUN echo ". activate dpvo" > ~/.bashrc

# Set entry commands
ENTRYPOINT ["/bin/bash"]
